<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- comment -->
<mapper namespace="com.uncle.csdn.dao.CommentMapper">
    <!-- This code was generated by TableGo tools, mark 1 begin. -->
    <!-- 字段映射 -->
    <resultMap id="commentMap" type="comment">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="reply_name" property="replyName" jdbcType="VARCHAR" />
        <result column="reply_email" property="replyEmail" jdbcType="VARCHAR" />
        <result column="blog_id" property="blogId" jdbcType="INTEGER" />
        <result column="publish_date" property="publishDate" jdbcType="TIMESTAMP" />
        <result column="blogger_state" property="bloggerState" jdbcType="VARCHAR" />
        <result column="reply_state" property="replyState" jdbcType="VARCHAR" />
        <result column="reply_content" property="replyContent" jdbcType="VARCHAR" />
        <result column="parent_id" property="parentId" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <!-- This code was generated by TableGo tools, mark 1 end. -->
    
    <!-- This code was generated by TableGo tools, mark 2 begin. -->
    <!-- 表查询字段 -->
    <sql id="allColumns">
        c.id, c.reply_name, c.reply_email, c.blog_id, c.publish_date, c.blogger_state, c.reply_state, c.reply_content, 
        c.parent_id, c.create_time
    </sql>
    <!-- This code was generated by TableGo tools, mark 2 end. -->
    
    <!-- 查询所有数据 -->
    <select id="findCommentAll" resultMap="commentMap">
        SELECT
        <include refid="allColumns" />
        FROM comment c
    </select>
    
    <!-- 根据条件参数查询数据列表 -->
    <select id="findCommentByCondition" resultMap="commentMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM comment c WHERE 1 = 1
        <if test="replyName != null and replyName != ''">
            AND c.reply_name LIKE CONCAT('%', #{replyName}, '%')
        </if>
        <if test="replyEmail != null and replyEmail != ''">
            AND c.reply_email LIKE CONCAT('%', #{replyEmail}, '%')
        </if>
        <if test="blogId != null">
            AND c.blog_id = #{blogId}
        </if>
        <if test="publishDate != null">
            AND c.publish_date = #{publishDate}
        </if>
        <if test="bloggerState != null">
            AND c.blogger_state = #{bloggerState}
        </if>
        <if test="replyState != null">
            AND c.reply_state = #{replyState}
        </if>
        <if test="replyContent != null and replyContent != ''">
            AND c.reply_content LIKE CONCAT('%', #{replyContent}, '%')
        </if>
        <if test="parentId != null">
            AND c.parent_id = #{parentId}
        </if>
        <if test="createTime != null">
            AND c.create_time = #{createTime}
        </if>
    </select>
    
    <!-- 根据主键查询数据 -->
    <select id="findCommentByIds" resultMap="commentMap" parameterType="list">
        SELECT
        <include refid="allColumns" />
        FROM comment c WHERE c.id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    
    <!-- 插入数据 -->
    <insert id="insertComment" parameterType="comment">
        INSERT INTO comment (
            id, reply_name, reply_email, blog_id, publish_date, blogger_state, reply_state, reply_content, 
            parent_id, create_time
        ) VALUES (
            #{id},
            #{replyName},
            #{replyEmail},
            #{blogId},
            #{publishDate},
            #{bloggerState},
            #{replyState},
            #{replyContent},
            #{parentId},
            #{createTime}
        )
    </insert>
    
    <!-- 修改数据 -->
    <update id="updateComment" parameterType="comment">
        UPDATE comment
        <set>
            <if test="replyName != null">
                reply_name = #{replyName},
            </if>
            <if test="replyEmail != null">
                reply_email = #{replyEmail},
            </if>
            <if test="blogId != null">
                blog_id = #{blogId},
            </if>
            <if test="publishDate != null">
                publish_date = #{publishDate},
            </if>
            <if test="bloggerState != null">
                blogger_state = #{bloggerState},
            </if>
            <if test="replyState != null">
                reply_state = #{replyState},
            </if>
            <if test="replyContent != null">
                reply_content = #{replyContent},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId},
            </if>
            <if test="createTime != null">
                create_time = #{createTime}
            </if>
        </set>
        WHERE id = #{id}
    </update>
    
</mapper>